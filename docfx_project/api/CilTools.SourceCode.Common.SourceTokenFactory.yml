### YamlMime:ManagedReference
items:
- uid: CilTools.SourceCode.Common.SourceTokenFactory
  commentId: T:CilTools.SourceCode.Common.SourceTokenFactory
  id: SourceTokenFactory
  parent: CilTools.SourceCode.Common
  children:
  - CilTools.SourceCode.Common.SourceTokenFactory.CreateNode(System.String,System.String,System.String)
  - CilTools.SourceCode.Common.SourceTokenFactory.Language
  langs:
  - csharp
  - vb
  name: SourceTokenFactory
  nameWithType: SourceTokenFactory
  fullName: CilTools.SourceCode.Common.SourceTokenFactory
  type: Class
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nProvides a <xref href=\"CilTools.Syntax.SyntaxFactory\" data-throw-if-not-resolved=\"false\"></xref> implementation that creates tokens for the specified source code language\n"
  syntax:
    content: 'public class SourceTokenFactory : SyntaxFactory'
    content.vb: >-
      Public Class SourceTokenFactory
          Inherits SyntaxFactory
  inheritance:
  - System.Object
  - CilTools.Syntax.SyntaxFactory
  inheritedMembers:
  - CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String,System.String,System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CilTools.SourceCode.Common.SourceTokenFactory.CreateNode(System.String,System.String,System.String)
  commentId: M:CilTools.SourceCode.Common.SourceTokenFactory.CreateNode(System.String,System.String,System.String)
  id: CreateNode(System.String,System.String,System.String)
  parent: CilTools.SourceCode.Common.SourceTokenFactory
  langs:
  - csharp
  - vb
  name: CreateNode(String, String, String)
  nameWithType: SourceTokenFactory.CreateNode(String, String, String)
  fullName: CilTools.SourceCode.Common.SourceTokenFactory.CreateNode(System.String, System.String, System.String)
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nCreates a new source token\n"
  syntax:
    content: public override SyntaxNode CreateNode(string content, string leadingWhitespace, string trailingWhitespace)
    parameters:
    - id: content
      type: System.String
    - id: leadingWhitespace
      type: System.String
    - id: trailingWhitespace
      type: System.String
    return:
      type: CilTools.Syntax.SyntaxNode
    content.vb: Public Overrides Function CreateNode(content As String, leadingWhitespace As String, trailingWhitespace As String) As SyntaxNode
  overridden: CilTools.Syntax.SyntaxFactory.CreateNode(System.String,System.String,System.String)
  overload: CilTools.SourceCode.Common.SourceTokenFactory.CreateNode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CilTools.SourceCode.Common.SourceTokenFactory.Language
  commentId: P:CilTools.SourceCode.Common.SourceTokenFactory.Language
  id: Language
  parent: CilTools.SourceCode.Common.SourceTokenFactory
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: SourceTokenFactory.Language
  fullName: CilTools.SourceCode.Common.SourceTokenFactory.Language
  type: Property
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nGets a programming language for this token factory\n"
  syntax:
    content: public SourceLanguage Language { get; }
    parameters: []
    return:
      type: CilTools.SourceCode.Common.SourceLanguage
    content.vb: Public ReadOnly Property Language As SourceLanguage
  overload: CilTools.SourceCode.Common.SourceTokenFactory.Language*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CilTools.SourceCode.Common
  commentId: N:CilTools.SourceCode.Common
  isExternal: true
  name: CilTools.SourceCode.Common
  nameWithType: CilTools.SourceCode.Common
  fullName: CilTools.SourceCode.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CilTools.Syntax.SyntaxFactory
  commentId: T:CilTools.Syntax.SyntaxFactory
  parent: CilTools.Syntax
  isExternal: true
  name: SyntaxFactory
  nameWithType: SyntaxFactory
  fullName: CilTools.Syntax.SyntaxFactory
- uid: CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String,System.String,System.String)
  commentId: M:CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String,System.String,System.String)
  parent: CilTools.Syntax.SyntaxFactory
  isExternal: true
  name: CreateFromToken(String, String, String)
  nameWithType: SyntaxFactory.CreateFromToken(String, String, String)
  fullName: CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String, System.String, System.String)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String,System.String,System.String)
    name: CreateFromToken
    nameWithType: SyntaxFactory.CreateFromToken
    fullName: CilTools.Syntax.SyntaxFactory.CreateFromToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxFactory.CreateFromToken(System.String,System.String,System.String)
    name: CreateFromToken
    nameWithType: SyntaxFactory.CreateFromToken
    fullName: CilTools.Syntax.SyntaxFactory.CreateFromToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CilTools.Syntax
  commentId: N:CilTools.Syntax
  isExternal: true
  name: CilTools.Syntax
  nameWithType: CilTools.Syntax
  fullName: CilTools.Syntax
- uid: CilTools.Syntax.SyntaxFactory.CreateNode(System.String,System.String,System.String)
  commentId: M:CilTools.Syntax.SyntaxFactory.CreateNode(System.String,System.String,System.String)
  parent: CilTools.Syntax.SyntaxFactory
  isExternal: true
  name: CreateNode(String, String, String)
  nameWithType: SyntaxFactory.CreateNode(String, String, String)
  fullName: CilTools.Syntax.SyntaxFactory.CreateNode(System.String, System.String, System.String)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxFactory.CreateNode(System.String,System.String,System.String)
    name: CreateNode
    nameWithType: SyntaxFactory.CreateNode
    fullName: CilTools.Syntax.SyntaxFactory.CreateNode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxFactory.CreateNode(System.String,System.String,System.String)
    name: CreateNode
    nameWithType: SyntaxFactory.CreateNode
    fullName: CilTools.Syntax.SyntaxFactory.CreateNode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.SourceCode.Common.SourceTokenFactory.CreateNode*
  commentId: Overload:CilTools.SourceCode.Common.SourceTokenFactory.CreateNode
  isExternal: true
  name: CreateNode
  nameWithType: SourceTokenFactory.CreateNode
  fullName: CilTools.SourceCode.Common.SourceTokenFactory.CreateNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CilTools.Syntax.SyntaxNode
  commentId: T:CilTools.Syntax.SyntaxNode
  parent: CilTools.Syntax
  isExternal: true
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: CilTools.Syntax.SyntaxNode
- uid: CilTools.SourceCode.Common.SourceTokenFactory.Language*
  commentId: Overload:CilTools.SourceCode.Common.SourceTokenFactory.Language
  isExternal: true
  name: Language
  nameWithType: SourceTokenFactory.Language
  fullName: CilTools.SourceCode.Common.SourceTokenFactory.Language
- uid: CilTools.SourceCode.Common.SourceLanguage
  commentId: T:CilTools.SourceCode.Common.SourceLanguage
  parent: CilTools.SourceCode.Common
  isExternal: true
  name: SourceLanguage
  nameWithType: SourceLanguage
  fullName: CilTools.SourceCode.Common.SourceLanguage
