### YamlMime:ManagedReference
items:
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection
  commentId: T:CilTools.SourceCode.Common.SyntaxNodeCollection
  id: SyntaxNodeCollection
  parent: CilTools.SourceCode.Common
  children:
  - CilTools.SourceCode.Common.SyntaxNodeCollection.Count
  - CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes
  - CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray(CilTools.Syntax.SyntaxNode[])
  - CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode(System.Int32)
  - CilTools.SourceCode.Common.SyntaxNodeCollection.ToText(System.IO.TextWriter)
  langs:
  - csharp
  - vb
  name: SyntaxNodeCollection
  nameWithType: SyntaxNodeCollection
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection
  type: Class
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nRepresents an ordered collection of syntax nodes\n"
  syntax:
    content: 'public class SyntaxNodeCollection : SyntaxNode'
    content.vb: >-
      Public Class SyntaxNodeCollection

          Inherits SyntaxNode
  inheritance:
  - System.Object
  - CilTools.Syntax.SyntaxNode
  inheritedMembers:
  - CilTools.Syntax.SyntaxNode._lead
  - CilTools.Syntax.SyntaxNode._trail
  - CilTools.Syntax.SyntaxNode._parent
  - CilTools.Syntax.SyntaxNode.EmptyArray
  - CilTools.Syntax.SyntaxNode.ToString
  - CilTools.Syntax.SyntaxNode.GetChildNodes
  - CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
  - CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type,System.Boolean,CilTools.Syntax.DisassemblerParams)
  - CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
  - CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String,System.Object)
  - CilTools.Syntax.SyntaxNode.LeadingWhitespace
  - CilTools.Syntax.SyntaxNode.TrailingWhitespace
  - CilTools.Syntax.SyntaxNode.Parent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray(CilTools.Syntax.SyntaxNode[])
  commentId: M:CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray(CilTools.Syntax.SyntaxNode[])
  id: FromArray(CilTools.Syntax.SyntaxNode[])
  parent: CilTools.SourceCode.Common.SyntaxNodeCollection
  langs:
  - csharp
  - vb
  name: FromArray(SyntaxNode[])
  nameWithType: SyntaxNodeCollection.FromArray(SyntaxNode[])
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray(CilTools.Syntax.SyntaxNode[])
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nCreates a new <code>SyntaxNodeCollection</code> using contents of the specified array\n"
  syntax:
    content: public static SyntaxNodeCollection FromArray(SyntaxNode[] nodes)
    parameters:
    - id: nodes
      type: CilTools.Syntax.SyntaxNode[]
    return:
      type: CilTools.SourceCode.Common.SyntaxNodeCollection
    content.vb: Public Shared Function FromArray(nodes As SyntaxNode()) As SyntaxNodeCollection
  overload: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray*
  nameWithType.vb: SyntaxNodeCollection.FromArray(SyntaxNode())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray(CilTools.Syntax.SyntaxNode())
  name.vb: FromArray(SyntaxNode())
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes
  commentId: M:CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes
  id: EnumerateChildNodes
  parent: CilTools.SourceCode.Common.SyntaxNodeCollection
  langs:
  - csharp
  - vb
  name: EnumerateChildNodes()
  nameWithType: SyntaxNodeCollection.EnumerateChildNodes()
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes()
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nEnumerates child nodes of this node. For the leaf node, returns an empty collection.\n"
  syntax:
    content: public override IEnumerable<SyntaxNode> EnumerateChildNodes()
    return:
      type: System.Collections.Generic.IEnumerable{CilTools.Syntax.SyntaxNode}
      description: The collection of child syntax nodes
    content.vb: Public Overrides Function EnumerateChildNodes As IEnumerable(Of SyntaxNode)
  overridden: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
  overload: CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.ToText(System.IO.TextWriter)
  commentId: M:CilTools.SourceCode.Common.SyntaxNodeCollection.ToText(System.IO.TextWriter)
  id: ToText(System.IO.TextWriter)
  parent: CilTools.SourceCode.Common.SyntaxNodeCollection
  langs:
  - csharp
  - vb
  name: ToText(TextWriter)
  nameWithType: SyntaxNodeCollection.ToText(TextWriter)
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.ToText(System.IO.TextWriter)
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nWrites text representation of this node into the specified TextWriter\n"
  syntax:
    content: public override void ToText(TextWriter target)
    parameters:
    - id: target
      type: System.IO.TextWriter
    content.vb: Public Overrides Sub ToText(target As TextWriter)
  overridden: CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
  overload: CilTools.SourceCode.Common.SyntaxNodeCollection.ToText*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode(System.Int32)
  commentId: M:CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode(System.Int32)
  id: GetNode(System.Int32)
  parent: CilTools.SourceCode.Common.SyntaxNodeCollection
  langs:
  - csharp
  - vb
  name: GetNode(Int32)
  nameWithType: SyntaxNodeCollection.GetNode(Int32)
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode(System.Int32)
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nGets the syntax node at the specified index in this collection\n"
  syntax:
    content: public SyntaxNode GetNode(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: CilTools.Syntax.SyntaxNode
    content.vb: Public Function GetNode(index As Integer) As SyntaxNode
  overload: CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.Count
  commentId: P:CilTools.SourceCode.Common.SyntaxNodeCollection.Count
  id: Count
  parent: CilTools.SourceCode.Common.SyntaxNodeCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SyntaxNodeCollection.Count
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.Count
  type: Property
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nGets the number of nodes in this collection\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: CilTools.SourceCode.Common.SyntaxNodeCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CilTools.SourceCode.Common
  commentId: N:CilTools.SourceCode.Common
  isExternal: true
  name: CilTools.SourceCode.Common
  nameWithType: CilTools.SourceCode.Common
  fullName: CilTools.SourceCode.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CilTools.Syntax.SyntaxNode
  commentId: T:CilTools.Syntax.SyntaxNode
  parent: CilTools.Syntax
  isExternal: true
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: CilTools.Syntax.SyntaxNode
- uid: CilTools.Syntax.SyntaxNode._lead
  commentId: F:CilTools.Syntax.SyntaxNode._lead
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: _lead
  nameWithType: SyntaxNode._lead
  fullName: CilTools.Syntax.SyntaxNode._lead
- uid: CilTools.Syntax.SyntaxNode._trail
  commentId: F:CilTools.Syntax.SyntaxNode._trail
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: _trail
  nameWithType: SyntaxNode._trail
  fullName: CilTools.Syntax.SyntaxNode._trail
- uid: CilTools.Syntax.SyntaxNode._parent
  commentId: F:CilTools.Syntax.SyntaxNode._parent
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: _parent
  nameWithType: SyntaxNode._parent
  fullName: CilTools.Syntax.SyntaxNode._parent
- uid: CilTools.Syntax.SyntaxNode.EmptyArray
  commentId: F:CilTools.Syntax.SyntaxNode.EmptyArray
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: EmptyArray
  nameWithType: SyntaxNode.EmptyArray
  fullName: CilTools.Syntax.SyntaxNode.EmptyArray
- uid: CilTools.Syntax.SyntaxNode.ToString
  commentId: M:CilTools.Syntax.SyntaxNode.ToString
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: ToString()
  nameWithType: SyntaxNode.ToString()
  fullName: CilTools.Syntax.SyntaxNode.ToString()
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.ToString
    name: ToString
    nameWithType: SyntaxNode.ToString
    fullName: CilTools.Syntax.SyntaxNode.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.ToString
    name: ToString
    nameWithType: SyntaxNode.ToString
    fullName: CilTools.Syntax.SyntaxNode.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.GetChildNodes
  commentId: M:CilTools.Syntax.SyntaxNode.GetChildNodes
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: GetChildNodes()
  nameWithType: SyntaxNode.GetChildNodes()
  fullName: CilTools.Syntax.SyntaxNode.GetChildNodes()
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.GetChildNodes
    name: GetChildNodes
    nameWithType: SyntaxNode.GetChildNodes
    fullName: CilTools.Syntax.SyntaxNode.GetChildNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.GetChildNodes
    name: GetChildNodes
    nameWithType: SyntaxNode.GetChildNodes
    fullName: CilTools.Syntax.SyntaxNode.GetChildNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
  commentId: M:CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: GetTypeDefSyntax(Type)
  nameWithType: SyntaxNode.GetTypeDefSyntax(Type)
  fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
    name: GetTypeDefSyntax
    nameWithType: SyntaxNode.GetTypeDefSyntax
    fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type)
    name: GetTypeDefSyntax
    nameWithType: SyntaxNode.GetTypeDefSyntax
    fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type,System.Boolean,CilTools.Syntax.DisassemblerParams)
  commentId: M:CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type,System.Boolean,CilTools.Syntax.DisassemblerParams)
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: GetTypeDefSyntax(Type, Boolean, DisassemblerParams)
  nameWithType: SyntaxNode.GetTypeDefSyntax(Type, Boolean, DisassemblerParams)
  fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type, System.Boolean, CilTools.Syntax.DisassemblerParams)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type,System.Boolean,CilTools.Syntax.DisassemblerParams)
    name: GetTypeDefSyntax
    nameWithType: SyntaxNode.GetTypeDefSyntax
    fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CilTools.Syntax.DisassemblerParams
    name: DisassemblerParams
    nameWithType: DisassemblerParams
    fullName: CilTools.Syntax.DisassemblerParams
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax(System.Type,System.Boolean,CilTools.Syntax.DisassemblerParams)
    name: GetTypeDefSyntax
    nameWithType: SyntaxNode.GetTypeDefSyntax
    fullName: CilTools.Syntax.SyntaxNode.GetTypeDefSyntax
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CilTools.Syntax.DisassemblerParams
    name: DisassemblerParams
    nameWithType: DisassemblerParams
    fullName: CilTools.Syntax.DisassemblerParams
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
  commentId: M:CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: GetAdditionalInfo(String)
  nameWithType: SyntaxNode.GetAdditionalInfo(String)
  fullName: CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
    name: GetAdditionalInfo
    nameWithType: SyntaxNode.GetAdditionalInfo
    fullName: CilTools.Syntax.SyntaxNode.GetAdditionalInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.GetAdditionalInfo(System.String)
    name: GetAdditionalInfo
    nameWithType: SyntaxNode.GetAdditionalInfo
    fullName: CilTools.Syntax.SyntaxNode.GetAdditionalInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String,System.Object)
  commentId: M:CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String,System.Object)
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: SetAdditionalInfo(String, Object)
  nameWithType: SyntaxNode.SetAdditionalInfo(String, Object)
  fullName: CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String, System.Object)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String,System.Object)
    name: SetAdditionalInfo
    nameWithType: SyntaxNode.SetAdditionalInfo
    fullName: CilTools.Syntax.SyntaxNode.SetAdditionalInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.SetAdditionalInfo(System.String,System.Object)
    name: SetAdditionalInfo
    nameWithType: SyntaxNode.SetAdditionalInfo
    fullName: CilTools.Syntax.SyntaxNode.SetAdditionalInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Syntax.SyntaxNode.LeadingWhitespace
  commentId: P:CilTools.Syntax.SyntaxNode.LeadingWhitespace
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: LeadingWhitespace
  nameWithType: SyntaxNode.LeadingWhitespace
  fullName: CilTools.Syntax.SyntaxNode.LeadingWhitespace
- uid: CilTools.Syntax.SyntaxNode.TrailingWhitespace
  commentId: P:CilTools.Syntax.SyntaxNode.TrailingWhitespace
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: TrailingWhitespace
  nameWithType: SyntaxNode.TrailingWhitespace
  fullName: CilTools.Syntax.SyntaxNode.TrailingWhitespace
- uid: CilTools.Syntax.SyntaxNode.Parent
  commentId: P:CilTools.Syntax.SyntaxNode.Parent
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: Parent
  nameWithType: SyntaxNode.Parent
  fullName: CilTools.Syntax.SyntaxNode.Parent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CilTools.Syntax
  commentId: N:CilTools.Syntax
  isExternal: true
  name: CilTools.Syntax
  nameWithType: CilTools.Syntax
  fullName: CilTools.Syntax
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray*
  commentId: Overload:CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray
  isExternal: true
  name: FromArray
  nameWithType: SyntaxNodeCollection.FromArray
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.FromArray
- uid: CilTools.Syntax.SyntaxNode[]
  isExternal: true
  name: SyntaxNode[]
  nameWithType: SyntaxNode[]
  fullName: CilTools.Syntax.SyntaxNode[]
  nameWithType.vb: SyntaxNode()
  fullName.vb: CilTools.Syntax.SyntaxNode()
  name.vb: SyntaxNode()
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode
    name: SyntaxNode
    nameWithType: SyntaxNode
    fullName: CilTools.Syntax.SyntaxNode
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode
    name: SyntaxNode
    nameWithType: SyntaxNode
    fullName: CilTools.Syntax.SyntaxNode
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection
  commentId: T:CilTools.SourceCode.Common.SyntaxNodeCollection
  parent: CilTools.SourceCode.Common
  isExternal: true
  name: SyntaxNodeCollection
  nameWithType: SyntaxNodeCollection
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection
- uid: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
  commentId: M:CilTools.Syntax.SyntaxNode.EnumerateChildNodes
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: EnumerateChildNodes()
  nameWithType: SyntaxNode.EnumerateChildNodes()
  fullName: CilTools.Syntax.SyntaxNode.EnumerateChildNodes()
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
    name: EnumerateChildNodes
    nameWithType: SyntaxNode.EnumerateChildNodes
    fullName: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
    name: EnumerateChildNodes
    nameWithType: SyntaxNode.EnumerateChildNodes
    fullName: CilTools.Syntax.SyntaxNode.EnumerateChildNodes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes*
  commentId: Overload:CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes
  isExternal: true
  name: EnumerateChildNodes
  nameWithType: SyntaxNodeCollection.EnumerateChildNodes
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.EnumerateChildNodes
- uid: System.Collections.Generic.IEnumerable{CilTools.Syntax.SyntaxNode}
  commentId: T:System.Collections.Generic.IEnumerable{CilTools.Syntax.SyntaxNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SyntaxNode>
  nameWithType: IEnumerable<SyntaxNode>
  fullName: System.Collections.Generic.IEnumerable<CilTools.Syntax.SyntaxNode>
  nameWithType.vb: IEnumerable(Of SyntaxNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CilTools.Syntax.SyntaxNode)
  name.vb: IEnumerable(Of SyntaxNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CilTools.Syntax.SyntaxNode
    name: SyntaxNode
    nameWithType: SyntaxNode
    fullName: CilTools.Syntax.SyntaxNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CilTools.Syntax.SyntaxNode
    name: SyntaxNode
    nameWithType: SyntaxNode
    fullName: CilTools.Syntax.SyntaxNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
  commentId: M:CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
  parent: CilTools.Syntax.SyntaxNode
  isExternal: true
  name: ToText(TextWriter)
  nameWithType: SyntaxNode.ToText(TextWriter)
  fullName: CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
  spec.csharp:
  - uid: CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
    name: ToText
    nameWithType: SyntaxNode.ToText
    fullName: CilTools.Syntax.SyntaxNode.ToText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CilTools.Syntax.SyntaxNode.ToText(System.IO.TextWriter)
    name: ToText
    nameWithType: SyntaxNode.ToText
    fullName: CilTools.Syntax.SyntaxNode.ToText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.ToText*
  commentId: Overload:CilTools.SourceCode.Common.SyntaxNodeCollection.ToText
  isExternal: true
  name: ToText
  nameWithType: SyntaxNodeCollection.ToText
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.ToText
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode*
  commentId: Overload:CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode
  isExternal: true
  name: GetNode
  nameWithType: SyntaxNodeCollection.GetNode
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.GetNode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection.Count*
  commentId: Overload:CilTools.SourceCode.Common.SyntaxNodeCollection.Count
  isExternal: true
  name: Count
  nameWithType: SyntaxNodeCollection.Count
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection.Count
