### YamlMime:ManagedReference
items:
- uid: CilTools.SourceCode.Common.SourceParser
  commentId: T:CilTools.SourceCode.Common.SourceParser
  id: SourceParser
  parent: CilTools.SourceCode.Common
  children:
  - CilTools.SourceCode.Common.SourceParser.Parse(System.String,System.String)
  - CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory(System.String,CilTools.Syntax.SyntaxFactory)
  langs:
  - csharp
  - vb
  name: SourceParser
  nameWithType: SourceParser
  fullName: CilTools.SourceCode.Common.SourceParser
  type: Class
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nProvides static methods that convert source text into syntax nodes\n"
  syntax:
    content: public static class SourceParser
    content.vb: Public Module SourceParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory(System.String,CilTools.Syntax.SyntaxFactory)
  commentId: M:CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory(System.String,CilTools.Syntax.SyntaxFactory)
  id: RegisterSyntaxFactory(System.String,CilTools.Syntax.SyntaxFactory)
  parent: CilTools.SourceCode.Common.SourceParser
  langs:
  - csharp
  - vb
  name: RegisterSyntaxFactory(String, SyntaxFactory)
  nameWithType: SourceParser.RegisterSyntaxFactory(String, SyntaxFactory)
  fullName: CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory(System.String, CilTools.Syntax.SyntaxFactory)
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nRegisters a syntax factory for the specified source file extension. Extension should be with a leading dot \nand in all lowercase letters.\n"
  syntax:
    content: public static void RegisterSyntaxFactory(string ext, SyntaxFactory factory)
    parameters:
    - id: ext
      type: System.String
    - id: factory
      type: CilTools.Syntax.SyntaxFactory
    content.vb: Public Shared Sub RegisterSyntaxFactory(ext As String, factory As SyntaxFactory)
  overload: CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CilTools.SourceCode.Common.SourceParser.Parse(System.String,System.String)
  commentId: M:CilTools.SourceCode.Common.SourceParser.Parse(System.String,System.String)
  id: Parse(System.String,System.String)
  parent: CilTools.SourceCode.Common.SourceParser
  langs:
  - csharp
  - vb
  name: Parse(String, String)
  nameWithType: SourceParser.Parse(String, String)
  fullName: CilTools.SourceCode.Common.SourceParser.Parse(System.String, System.String)
  type: Method
  source:
    path: CilTools.SourceCode
    isExternal: true
  assemblies:
  - CilTools.SourceCode
  namespace: CilTools.SourceCode.Common
  summary: "\nConverts the specified source text into a collection of parsed syntax nodes, using the language specified \nby source file extension.\n"
  syntax:
    content: public static SyntaxNodeCollection Parse(string sourceText, string ext)
    parameters:
    - id: sourceText
      type: System.String
      description: Source text to parse
    - id: ext
      type: System.String
      description: Source file extension with a leading dot (for example, <code>.cs</code> for C#)
    return:
      type: CilTools.SourceCode.Common.SyntaxNodeCollection
    content.vb: Public Shared Function Parse(sourceText As String, ext As String) As SyntaxNodeCollection
  overload: CilTools.SourceCode.Common.SourceParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CilTools.SourceCode.Common
  commentId: N:CilTools.SourceCode.Common
  isExternal: true
  name: CilTools.SourceCode.Common
  nameWithType: CilTools.SourceCode.Common
  fullName: CilTools.SourceCode.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory*
  commentId: Overload:CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory
  isExternal: true
  name: RegisterSyntaxFactory
  nameWithType: SourceParser.RegisterSyntaxFactory
  fullName: CilTools.SourceCode.Common.SourceParser.RegisterSyntaxFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CilTools.Syntax.SyntaxFactory
  commentId: T:CilTools.Syntax.SyntaxFactory
  parent: CilTools.Syntax
  isExternal: true
  name: SyntaxFactory
  nameWithType: SyntaxFactory
  fullName: CilTools.Syntax.SyntaxFactory
- uid: CilTools.Syntax
  commentId: N:CilTools.Syntax
  isExternal: true
  name: CilTools.Syntax
  nameWithType: CilTools.Syntax
  fullName: CilTools.Syntax
- uid: CilTools.SourceCode.Common.SourceParser.Parse*
  commentId: Overload:CilTools.SourceCode.Common.SourceParser.Parse
  isExternal: true
  name: Parse
  nameWithType: SourceParser.Parse
  fullName: CilTools.SourceCode.Common.SourceParser.Parse
- uid: CilTools.SourceCode.Common.SyntaxNodeCollection
  commentId: T:CilTools.SourceCode.Common.SyntaxNodeCollection
  parent: CilTools.SourceCode.Common
  isExternal: true
  name: SyntaxNodeCollection
  nameWithType: SyntaxNodeCollection
  fullName: CilTools.SourceCode.Common.SyntaxNodeCollection
